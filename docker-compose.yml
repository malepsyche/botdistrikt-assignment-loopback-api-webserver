# version: '3.8'
# services:
#   backend:
#     build: ./backend
#     volumes:
#       - ./backend:/app
#     # Removed ports to not expose backend directly, Nginx will proxy to it

#   frontend:
#     build: ./frontend
#     volumes:
#       - ./frontend:/app
#     # Removed ports and command; Nginx will serve the frontend

#   nginx:
#     build: ./nginx
#     ports:
#       - "80:80"
#     depends_on:
#       - frontend
#       - backend

#   db:
#     image: postgres:13
#     environment:
#       POSTGRES_PASSWORD: ${DB_PASS}
#       POSTGRES_USER: ${DB_USER}
#       POSTGRES_DB: ${DB_NAME}
#     volumes:
#       - pgdata:/var/lib/postgresql/data

# volumes:
#   pgdata:



version: '3.8'
services:
  backend:
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}

  frontend:
    build: 
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:3000/

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: